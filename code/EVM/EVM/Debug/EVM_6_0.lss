
EVM_6_0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000065c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000065c  000006f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800070  00800070  00000700  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000700  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000730  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013b3  00000000  00000000  00000854  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000088e  00000000  00000000  00001c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f8  00000000  00000000  00002495  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  00002d90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a7  00000000  00000000  00002efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008b0  00000000  00000000  000033a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003c53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e5       	ldi	r30, 0x5C	; 92
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 37       	cpi	r26, 0x74	; 116
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 98 01 	call	0x330	; 0x330 <main>
  8a:	0c 94 2c 03 	jmp	0x658	; 0x658 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <button_vInit>:
 *  Author: islam ashraf mustafa
 */ 
#include "DIO.h"
void button_vInit(unsigned char portname,unsigned char pinnumber)
{
	DIO_vsetPINDir(portname,pinnumber,0);
  92:	40 e0       	ldi	r20, 0x00	; 0
  94:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
  98:	08 95       	ret

0000009a <button_u8read>:
}
unsigned char button_u8read(unsigned char portname,unsigned char pinnumber)
{
	unsigned char x;
	x=DIO_u8read(portname,pinnumber);
  9a:	0e 94 30 01 	call	0x260	; 0x260 <DIO_u8read>
	return x ;
}
  9e:	08 95       	ret

000000a0 <DIO_vsetPINDir>:
		break ;
		case 'C' :
		DDRC=direction; //set the direction of port C
		break ;
		case 'D':
		DDRD=direction; //set the direction of port D
  a0:	82 34       	cpi	r24, 0x42	; 66
  a2:	19 f1       	breq	.+70     	; 0xea <DIO_vsetPINDir+0x4a>
  a4:	18 f4       	brcc	.+6      	; 0xac <DIO_vsetPINDir+0xc>
  a6:	81 34       	cpi	r24, 0x41	; 65
  a8:	39 f0       	breq	.+14     	; 0xb8 <DIO_vsetPINDir+0x18>
  aa:	08 95       	ret
  ac:	83 34       	cpi	r24, 0x43	; 67
  ae:	b1 f1       	breq	.+108    	; 0x11c <DIO_vsetPINDir+0x7c>
  b0:	84 34       	cpi	r24, 0x44	; 68
  b2:	09 f4       	brne	.+2      	; 0xb6 <DIO_vsetPINDir+0x16>
  b4:	4c c0       	rjmp	.+152    	; 0x14e <DIO_vsetPINDir+0xae>
  b6:	08 95       	ret
  b8:	41 30       	cpi	r20, 0x01	; 1
  ba:	59 f4       	brne	.+22     	; 0xd2 <DIO_vsetPINDir+0x32>
  bc:	2a b3       	in	r18, 0x1a	; 26
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_vsetPINDir+0x28>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_vsetPINDir+0x24>
  cc:	82 2b       	or	r24, r18
  ce:	8a bb       	out	0x1a, r24	; 26
  d0:	08 95       	ret
  d2:	2a b3       	in	r18, 0x1a	; 26
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_vsetPINDir+0x3e>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_vsetPINDir+0x3a>
  e2:	80 95       	com	r24
  e4:	82 23       	and	r24, r18
  e6:	8a bb       	out	0x1a, r24	; 26
  e8:	08 95       	ret
  ea:	41 30       	cpi	r20, 0x01	; 1
  ec:	59 f4       	brne	.+22     	; 0x104 <DIO_vsetPINDir+0x64>
  ee:	27 b3       	in	r18, 0x17	; 23
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_vsetPINDir+0x5a>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_vsetPINDir+0x56>
  fe:	82 2b       	or	r24, r18
 100:	87 bb       	out	0x17, r24	; 23
 102:	08 95       	ret
 104:	27 b3       	in	r18, 0x17	; 23
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_vsetPINDir+0x70>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_vsetPINDir+0x6c>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	87 bb       	out	0x17, r24	; 23
 11a:	08 95       	ret
 11c:	41 30       	cpi	r20, 0x01	; 1
 11e:	59 f4       	brne	.+22     	; 0x136 <DIO_vsetPINDir+0x96>
 120:	24 b3       	in	r18, 0x14	; 20
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	02 c0       	rjmp	.+4      	; 0x12c <DIO_vsetPINDir+0x8c>
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	6a 95       	dec	r22
 12e:	e2 f7       	brpl	.-8      	; 0x128 <DIO_vsetPINDir+0x88>
 130:	82 2b       	or	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	24 b3       	in	r18, 0x14	; 20
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	02 c0       	rjmp	.+4      	; 0x142 <DIO_vsetPINDir+0xa2>
 13e:	88 0f       	add	r24, r24
 140:	99 1f       	adc	r25, r25
 142:	6a 95       	dec	r22
 144:	e2 f7       	brpl	.-8      	; 0x13e <DIO_vsetPINDir+0x9e>
 146:	80 95       	com	r24
 148:	82 23       	and	r24, r18
 14a:	84 bb       	out	0x14, r24	; 20
 14c:	08 95       	ret
 14e:	41 30       	cpi	r20, 0x01	; 1
 150:	59 f4       	brne	.+22     	; 0x168 <DIO_vsetPINDir+0xc8>
 152:	21 b3       	in	r18, 0x11	; 17
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_vsetPINDir+0xbe>
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	6a 95       	dec	r22
 160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_vsetPINDir+0xba>
 162:	82 2b       	or	r24, r18
 164:	81 bb       	out	0x11, r24	; 17
 166:	08 95       	ret
 168:	21 b3       	in	r18, 0x11	; 17
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_vsetPINDir+0xd4>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	6a 95       	dec	r22
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_vsetPINDir+0xd0>
 178:	80 95       	com	r24
 17a:	82 23       	and	r24, r18
 17c:	81 bb       	out	0x11, r24	; 17
 17e:	08 95       	ret

00000180 <DIO_write>:
 180:	82 34       	cpi	r24, 0x42	; 66
 182:	19 f1       	breq	.+70     	; 0x1ca <DIO_write+0x4a>
 184:	18 f4       	brcc	.+6      	; 0x18c <DIO_write+0xc>
 186:	81 34       	cpi	r24, 0x41	; 65
 188:	39 f0       	breq	.+14     	; 0x198 <DIO_write+0x18>
 18a:	08 95       	ret
 18c:	83 34       	cpi	r24, 0x43	; 67
 18e:	b1 f1       	breq	.+108    	; 0x1fc <DIO_write+0x7c>
 190:	84 34       	cpi	r24, 0x44	; 68
 192:	09 f4       	brne	.+2      	; 0x196 <DIO_write+0x16>
 194:	4c c0       	rjmp	.+152    	; 0x22e <DIO_write+0xae>
 196:	08 95       	ret
 198:	41 30       	cpi	r20, 0x01	; 1
 19a:	59 f4       	brne	.+22     	; 0x1b2 <DIO_write+0x32>
 19c:	2b b3       	in	r18, 0x1b	; 27
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_write+0x28>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_write+0x24>
 1ac:	82 2b       	or	r24, r18
 1ae:	8b bb       	out	0x1b, r24	; 27
 1b0:	08 95       	ret
 1b2:	2b b3       	in	r18, 0x1b	; 27
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <DIO_write+0x3e>
 1ba:	88 0f       	add	r24, r24
 1bc:	99 1f       	adc	r25, r25
 1be:	6a 95       	dec	r22
 1c0:	e2 f7       	brpl	.-8      	; 0x1ba <DIO_write+0x3a>
 1c2:	80 95       	com	r24
 1c4:	82 23       	and	r24, r18
 1c6:	8b bb       	out	0x1b, r24	; 27
 1c8:	08 95       	ret
 1ca:	41 30       	cpi	r20, 0x01	; 1
 1cc:	59 f4       	brne	.+22     	; 0x1e4 <DIO_write+0x64>
 1ce:	28 b3       	in	r18, 0x18	; 24
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_write+0x5a>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_write+0x56>
 1de:	82 2b       	or	r24, r18
 1e0:	88 bb       	out	0x18, r24	; 24
 1e2:	08 95       	ret
 1e4:	28 b3       	in	r18, 0x18	; 24
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_write+0x70>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_write+0x6c>
 1f4:	80 95       	com	r24
 1f6:	82 23       	and	r24, r18
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret
 1fc:	41 30       	cpi	r20, 0x01	; 1
 1fe:	59 f4       	brne	.+22     	; 0x216 <DIO_write+0x96>
 200:	25 b3       	in	r18, 0x15	; 21
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_write+0x8c>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_write+0x88>
 210:	82 2b       	or	r24, r18
 212:	85 bb       	out	0x15, r24	; 21
 214:	08 95       	ret
 216:	25 b3       	in	r18, 0x15	; 21
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_write+0xa2>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_write+0x9e>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	08 95       	ret
 22e:	41 30       	cpi	r20, 0x01	; 1
 230:	59 f4       	brne	.+22     	; 0x248 <DIO_write+0xc8>
 232:	22 b3       	in	r18, 0x12	; 18
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_write+0xbe>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_write+0xba>
 242:	82 2b       	or	r24, r18
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret
 248:	22 b3       	in	r18, 0x12	; 18
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_write+0xd4>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_write+0xd0>
 258:	80 95       	com	r24
 25a:	82 23       	and	r24, r18
 25c:	82 bb       	out	0x12, r24	; 18
 25e:	08 95       	ret

00000260 <DIO_u8read>:
 260:	82 34       	cpi	r24, 0x42	; 66
 262:	d9 f0       	breq	.+54     	; 0x29a <DIO_u8read+0x3a>
 264:	18 f4       	brcc	.+6      	; 0x26c <DIO_u8read+0xc>
 266:	81 34       	cpi	r24, 0x41	; 65
 268:	31 f0       	breq	.+12     	; 0x276 <DIO_u8read+0x16>
 26a:	4d c0       	rjmp	.+154    	; 0x306 <DIO_u8read+0xa6>
 26c:	83 34       	cpi	r24, 0x43	; 67
 26e:	39 f1       	breq	.+78     	; 0x2be <DIO_u8read+0x5e>
 270:	84 34       	cpi	r24, 0x44	; 68
 272:	b9 f1       	breq	.+110    	; 0x2e2 <DIO_u8read+0x82>
 274:	48 c0       	rjmp	.+144    	; 0x306 <DIO_u8read+0xa6>
 276:	29 b3       	in	r18, 0x19	; 25
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	06 2e       	mov	r0, r22
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_u8read+0x24>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	0a 94       	dec	r0
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_u8read+0x20>
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	82 23       	and	r24, r18
 28c:	93 23       	and	r25, r19
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_u8read+0x34>
 290:	95 95       	asr	r25
 292:	87 95       	ror	r24
 294:	6a 95       	dec	r22
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_u8read+0x30>
 298:	08 95       	ret
 29a:	26 b3       	in	r18, 0x16	; 22
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	06 2e       	mov	r0, r22
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_u8read+0x48>
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	0a 94       	dec	r0
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_u8read+0x44>
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	82 23       	and	r24, r18
 2b0:	93 23       	and	r25, r19
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <DIO_u8read+0x58>
 2b4:	95 95       	asr	r25
 2b6:	87 95       	ror	r24
 2b8:	6a 95       	dec	r22
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <DIO_u8read+0x54>
 2bc:	08 95       	ret
 2be:	23 b3       	in	r18, 0x13	; 19
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	06 2e       	mov	r0, r22
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_u8read+0x6c>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	0a 94       	dec	r0
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_u8read+0x68>
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	82 23       	and	r24, r18
 2d4:	93 23       	and	r25, r19
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_u8read+0x7c>
 2d8:	95 95       	asr	r25
 2da:	87 95       	ror	r24
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_u8read+0x78>
 2e0:	08 95       	ret
 2e2:	20 b3       	in	r18, 0x10	; 16
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	06 2e       	mov	r0, r22
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_u8read+0x90>
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	0a 94       	dec	r0
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_u8read+0x8c>
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	82 23       	and	r24, r18
 2f8:	93 23       	and	r25, r19
 2fa:	02 c0       	rjmp	.+4      	; 0x300 <DIO_u8read+0xa0>
 2fc:	95 95       	asr	r25
 2fe:	87 95       	ror	r24
 300:	6a 95       	dec	r22
 302:	e2 f7       	brpl	.-8      	; 0x2fc <DIO_u8read+0x9c>
 304:	08 95       	ret
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	08 95       	ret

0000030a <DIO_write_port>:
	}
	
}
void DIO_write_port(unsigned char portname,unsigned char portvalue)
{
	switch(portname)
 30a:	82 34       	cpi	r24, 0x42	; 66
 30c:	59 f0       	breq	.+22     	; 0x324 <DIO_write_port+0x1a>
 30e:	18 f4       	brcc	.+6      	; 0x316 <DIO_write_port+0xc>
 310:	81 34       	cpi	r24, 0x41	; 65
 312:	31 f0       	breq	.+12     	; 0x320 <DIO_write_port+0x16>
 314:	08 95       	ret
 316:	83 34       	cpi	r24, 0x43	; 67
 318:	39 f0       	breq	.+14     	; 0x328 <DIO_write_port+0x1e>
 31a:	84 34       	cpi	r24, 0x44	; 68
 31c:	39 f0       	breq	.+14     	; 0x32c <DIO_write_port+0x22>
 31e:	08 95       	ret
	{
		case 'A' :
		PORTA=portvalue; //Write the given value to the port A
 320:	6b bb       	out	0x1b, r22	; 27
		break ;
 322:	08 95       	ret
		case 'B':
		PORTB=portvalue; //Write the given value to the port B
 324:	68 bb       	out	0x18, r22	; 24
		break ;
 326:	08 95       	ret
		case 'C' :
		PORTC=portvalue; //Write the given value to the port C
 328:	65 bb       	out	0x15, r22	; 21
		break ;
 32a:	08 95       	ret
		case 'D':
		PORTD=portvalue; //Write the given value to the port D
 32c:	62 bb       	out	0x12, r22	; 18
 32e:	08 95       	ret

00000330 <main>:
unsigned char counter2=0;
unsigned char counter3=0;
unsigned char counter4=0;
int main(void)
{
	LCD_vInit();
 330:	0e 94 82 02 	call	0x504	; 0x504 <LCD_vInit>
	button_vInit('B',3);
 334:	63 e0       	ldi	r22, 0x03	; 3
 336:	82 e4       	ldi	r24, 0x42	; 66
 338:	0e 94 49 00 	call	0x92	; 0x92 <button_vInit>
	button_vInit('B',4);
 33c:	64 e0       	ldi	r22, 0x04	; 4
 33e:	82 e4       	ldi	r24, 0x42	; 66
 340:	0e 94 49 00 	call	0x92	; 0x92 <button_vInit>
	button_vInit('B',5);
 344:	65 e0       	ldi	r22, 0x05	; 5
 346:	82 e4       	ldi	r24, 0x42	; 66
 348:	0e 94 49 00 	call	0x92	; 0x92 <button_vInit>
	button_vInit('B',6);
 34c:	66 e0       	ldi	r22, 0x06	; 6
 34e:	82 e4       	ldi	r24, 0x42	; 66
 350:	0e 94 49 00 	call	0x92	; 0x92 <button_vInit>
	button_vInit('B',7);
 354:	67 e0       	ldi	r22, 0x07	; 7
 356:	82 e4       	ldi	r24, 0x42	; 66
 358:	0e 94 49 00 	call	0x92	; 0x92 <button_vInit>
	
	LCD_vSend_string("A=0");
 35c:	80 e6       	ldi	r24, 0x60	; 96
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
	LCD_movecursor(1,12);
 364:	6c e0       	ldi	r22, 0x0C	; 12
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
	LCD_vSend_string("B=0");
 36c:	84 e6       	ldi	r24, 0x64	; 100
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
	LCD_movecursor(2,1);
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	82 e0       	ldi	r24, 0x02	; 2
 378:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
	LCD_vSend_string("C=0");
 37c:	88 e6       	ldi	r24, 0x68	; 104
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
	LCD_movecursor(2,12);
 384:	6c e0       	ldi	r22, 0x0C	; 12
 386:	82 e0       	ldi	r24, 0x02	; 2
 388:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
	LCD_vSend_string("D=0");
 38c:	8c e6       	ldi	r24, 0x6C	; 108
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
    while(1)
    {
		if (button_u8read('B',3)==1)
 394:	63 e0       	ldi	r22, 0x03	; 3
 396:	82 e4       	ldi	r24, 0x42	; 66
 398:	0e 94 4d 00 	call	0x9a	; 0x9a <button_u8read>
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	79 f4       	brne	.+30     	; 0x3be <main+0x8e>
		{
			counter1++;
 3a0:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <counter1>
 3a4:	8f 5f       	subi	r24, 0xFF	; 255
 3a6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <counter1>
			LCD_movecursor(1,3);
 3aa:	63 e0       	ldi	r22, 0x03	; 3
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_char(counter1+48);
 3b2:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <counter1>
 3b6:	80 5d       	subi	r24, 0xD0	; 208
 3b8:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_vSend_char>
 3bc:	70 c0       	rjmp	.+224    	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			
		}
		else if(button_u8read('B',4)==1)
 3be:	64 e0       	ldi	r22, 0x04	; 4
 3c0:	82 e4       	ldi	r24, 0x42	; 66
 3c2:	0e 94 4d 00 	call	0x9a	; 0x9a <button_u8read>
 3c6:	81 30       	cpi	r24, 0x01	; 1
 3c8:	79 f4       	brne	.+30     	; 0x3e8 <main+0xb8>
		{
			counter2++;
 3ca:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <counter2>
 3ce:	8f 5f       	subi	r24, 0xFF	; 255
 3d0:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <counter2>
			LCD_movecursor(1,14);
 3d4:	6e e0       	ldi	r22, 0x0E	; 14
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_char(counter2+48);
 3dc:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <counter2>
 3e0:	80 5d       	subi	r24, 0xD0	; 208
 3e2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_vSend_char>
 3e6:	5b c0       	rjmp	.+182    	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			
		}
		else if(button_u8read('B',5)==1)
 3e8:	65 e0       	ldi	r22, 0x05	; 5
 3ea:	82 e4       	ldi	r24, 0x42	; 66
 3ec:	0e 94 4d 00 	call	0x9a	; 0x9a <button_u8read>
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	79 f4       	brne	.+30     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
		{
			counter3++;
 3f4:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter3>
 3f8:	8f 5f       	subi	r24, 0xFF	; 255
 3fa:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <counter3>
			LCD_movecursor(2,3);
 3fe:	63 e0       	ldi	r22, 0x03	; 3
 400:	82 e0       	ldi	r24, 0x02	; 2
 402:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_char(counter3+48);
 406:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <counter3>
 40a:	80 5d       	subi	r24, 0xD0	; 208
 40c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_vSend_char>
 410:	46 c0       	rjmp	.+140    	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			
		}
		else if(button_u8read('B',6)==1)
 412:	66 e0       	ldi	r22, 0x06	; 6
 414:	82 e4       	ldi	r24, 0x42	; 66
 416:	0e 94 4d 00 	call	0x9a	; 0x9a <button_u8read>
 41a:	81 30       	cpi	r24, 0x01	; 1
 41c:	79 f4       	brne	.+30     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
		{
			counter4++;
 41e:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 422:	8f 5f       	subi	r24, 0xFF	; 255
 424:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__data_end>
			LCD_movecursor(2,14);
 428:	6e e0       	ldi	r22, 0x0E	; 14
 42a:	82 e0       	ldi	r24, 0x02	; 2
 42c:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_char(counter4+48);
 430:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <__data_end>
 434:	80 5d       	subi	r24, 0xD0	; 208
 436:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_vSend_char>
 43a:	31 c0       	rjmp	.+98     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			
		}
		else if(button_u8read('B',7)==1)
 43c:	67 e0       	ldi	r22, 0x07	; 7
 43e:	82 e4       	ldi	r24, 0x42	; 66
 440:	0e 94 4d 00 	call	0x9a	; 0x9a <button_u8read>
 444:	81 30       	cpi	r24, 0x01	; 1
 446:	59 f5       	brne	.+86     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
		{
			counter1=counter2=counter3=counter4=0;
 448:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__data_end>
 44c:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <counter3>
 450:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <counter2>
 454:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <counter1>
			LCD_movecursor(1,1);
 458:	61 e0       	ldi	r22, 0x01	; 1
 45a:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_string("A=0");
 45e:	80 e6       	ldi	r24, 0x60	; 96
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
			LCD_movecursor(1,12);
 466:	6c e0       	ldi	r22, 0x0C	; 12
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_string("B=0");
 46e:	84 e6       	ldi	r24, 0x64	; 100
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
			LCD_movecursor(2,1);
 476:	61 e0       	ldi	r22, 0x01	; 1
 478:	82 e0       	ldi	r24, 0x02	; 2
 47a:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_string("C=0");
 47e:	88 e6       	ldi	r24, 0x68	; 104
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
			LCD_movecursor(2,12);
 486:	6c e0       	ldi	r22, 0x0C	; 12
 488:	82 e0       	ldi	r24, 0x02	; 2
 48a:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
			LCD_vSend_string("D=0");
 48e:	8c e6       	ldi	r24, 0x6C	; 108
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 fe 02 	call	0x5fc	; 0x5fc <LCD_vSend_string>
			LCD_movecursor(1,1);
 496:	61 e0       	ldi	r22, 0x01	; 1
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	0e 94 0d 03 	call	0x61a	; 0x61a <LCD_movecursor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	81 ee       	ldi	r24, 0xE1	; 225
 4a2:	94 e0       	ldi	r25, 0x04	; 4
 4a4:	21 50       	subi	r18, 0x01	; 1
 4a6:	80 40       	sbci	r24, 0x00	; 0
 4a8:	90 40       	sbci	r25, 0x00	; 0
 4aa:	e1 f7       	brne	.-8      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4ac:	00 c0       	rjmp	.+0      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4ae:	00 00       	nop
 4b0:	71 cf       	rjmp	.-286    	; 0x394 <main+0x64>

000004b2 <send_falling_edge>:
 4b2:	41 e0       	ldi	r20, 0x01	; 1
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	82 e4       	ldi	r24, 0x42	; 66
 4b8:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_write>
 4bc:	8f e9       	ldi	r24, 0x9F	; 159
 4be:	9f e0       	ldi	r25, 0x0F	; 15
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	f1 f7       	brne	.-4      	; 0x4c0 <send_falling_edge+0xe>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <send_falling_edge+0x14>
 4c6:	00 00       	nop
 4c8:	40 e0       	ldi	r20, 0x00	; 0
 4ca:	60 e0       	ldi	r22, 0x00	; 0
 4cc:	82 e4       	ldi	r24, 0x42	; 66
 4ce:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_write>
 4d2:	8f e9       	ldi	r24, 0x9F	; 159
 4d4:	9f e0       	ldi	r25, 0x0F	; 15
 4d6:	01 97       	sbiw	r24, 0x01	; 1
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <send_falling_edge+0x24>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <send_falling_edge+0x2a>
 4dc:	00 00       	nop
 4de:	08 95       	ret

000004e0 <LCD_vSend_cmd>:
 4e0:	68 2f       	mov	r22, r24
 4e2:	81 e4       	ldi	r24, 0x41	; 65
 4e4:	0e 94 85 01 	call	0x30a	; 0x30a <DIO_write_port>
 4e8:	40 e0       	ldi	r20, 0x00	; 0
 4ea:	61 e0       	ldi	r22, 0x01	; 1
 4ec:	82 e4       	ldi	r24, 0x42	; 66
 4ee:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_write>
 4f2:	0e 94 59 02 	call	0x4b2	; 0x4b2 <send_falling_edge>
 4f6:	8f ec       	ldi	r24, 0xCF	; 207
 4f8:	97 e0       	ldi	r25, 0x07	; 7
 4fa:	01 97       	sbiw	r24, 0x01	; 1
 4fc:	f1 f7       	brne	.-4      	; 0x4fa <LCD_vSend_cmd+0x1a>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <LCD_vSend_cmd+0x20>
 500:	00 00       	nop
 502:	08 95       	ret

00000504 <LCD_vInit>:
 504:	2f ef       	ldi	r18, 0xFF	; 255
 506:	81 ee       	ldi	r24, 0xE1	; 225
 508:	94 e0       	ldi	r25, 0x04	; 4
 50a:	21 50       	subi	r18, 0x01	; 1
 50c:	80 40       	sbci	r24, 0x00	; 0
 50e:	90 40       	sbci	r25, 0x00	; 0
 510:	e1 f7       	brne	.-8      	; 0x50a <LCD_vInit+0x6>
 512:	00 c0       	rjmp	.+0      	; 0x514 <LCD_vInit+0x10>
 514:	00 00       	nop
 516:	41 e0       	ldi	r20, 0x01	; 1
 518:	60 e0       	ldi	r22, 0x00	; 0
 51a:	81 e4       	ldi	r24, 0x41	; 65
 51c:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 520:	41 e0       	ldi	r20, 0x01	; 1
 522:	61 e0       	ldi	r22, 0x01	; 1
 524:	81 e4       	ldi	r24, 0x41	; 65
 526:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 52a:	41 e0       	ldi	r20, 0x01	; 1
 52c:	62 e0       	ldi	r22, 0x02	; 2
 52e:	81 e4       	ldi	r24, 0x41	; 65
 530:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 534:	41 e0       	ldi	r20, 0x01	; 1
 536:	63 e0       	ldi	r22, 0x03	; 3
 538:	81 e4       	ldi	r24, 0x41	; 65
 53a:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 53e:	41 e0       	ldi	r20, 0x01	; 1
 540:	64 e0       	ldi	r22, 0x04	; 4
 542:	81 e4       	ldi	r24, 0x41	; 65
 544:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 548:	41 e0       	ldi	r20, 0x01	; 1
 54a:	65 e0       	ldi	r22, 0x05	; 5
 54c:	81 e4       	ldi	r24, 0x41	; 65
 54e:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 552:	41 e0       	ldi	r20, 0x01	; 1
 554:	66 e0       	ldi	r22, 0x06	; 6
 556:	81 e4       	ldi	r24, 0x41	; 65
 558:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 55c:	41 e0       	ldi	r20, 0x01	; 1
 55e:	67 e0       	ldi	r22, 0x07	; 7
 560:	81 e4       	ldi	r24, 0x41	; 65
 562:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 566:	41 e0       	ldi	r20, 0x01	; 1
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	82 e4       	ldi	r24, 0x42	; 66
 56c:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 570:	41 e0       	ldi	r20, 0x01	; 1
 572:	62 e0       	ldi	r22, 0x02	; 2
 574:	82 e4       	ldi	r24, 0x42	; 66
 576:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 57a:	41 e0       	ldi	r20, 0x01	; 1
 57c:	61 e0       	ldi	r22, 0x01	; 1
 57e:	82 e4       	ldi	r24, 0x42	; 66
 580:	0e 94 50 00 	call	0xa0	; 0xa0 <DIO_vsetPINDir>
 584:	40 e0       	ldi	r20, 0x00	; 0
 586:	62 e0       	ldi	r22, 0x02	; 2
 588:	82 e4       	ldi	r24, 0x42	; 66
 58a:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_write>
 58e:	88 e3       	ldi	r24, 0x38	; 56
 590:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_vSend_cmd>
 594:	8f ec       	ldi	r24, 0xCF	; 207
 596:	97 e0       	ldi	r25, 0x07	; 7
 598:	01 97       	sbiw	r24, 0x01	; 1
 59a:	f1 f7       	brne	.-4      	; 0x598 <LCD_vInit+0x94>
 59c:	00 c0       	rjmp	.+0      	; 0x59e <LCD_vInit+0x9a>
 59e:	00 00       	nop
 5a0:	8c e0       	ldi	r24, 0x0C	; 12
 5a2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_vSend_cmd>
 5a6:	8f ec       	ldi	r24, 0xCF	; 207
 5a8:	97 e0       	ldi	r25, 0x07	; 7
 5aa:	01 97       	sbiw	r24, 0x01	; 1
 5ac:	f1 f7       	brne	.-4      	; 0x5aa <LCD_vInit+0xa6>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <LCD_vInit+0xac>
 5b0:	00 00       	nop
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_vSend_cmd>
 5b8:	8f e1       	ldi	r24, 0x1F	; 31
 5ba:	9e e4       	ldi	r25, 0x4E	; 78
 5bc:	01 97       	sbiw	r24, 0x01	; 1
 5be:	f1 f7       	brne	.-4      	; 0x5bc <LCD_vInit+0xb8>
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <LCD_vInit+0xbe>
 5c2:	00 00       	nop
 5c4:	86 e0       	ldi	r24, 0x06	; 6
 5c6:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_vSend_cmd>
 5ca:	8f ec       	ldi	r24, 0xCF	; 207
 5cc:	97 e0       	ldi	r25, 0x07	; 7
 5ce:	01 97       	sbiw	r24, 0x01	; 1
 5d0:	f1 f7       	brne	.-4      	; 0x5ce <LCD_vInit+0xca>
 5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <LCD_vInit+0xd0>
 5d4:	00 00       	nop
 5d6:	08 95       	ret

000005d8 <LCD_vSend_char>:
 5d8:	68 2f       	mov	r22, r24
 5da:	81 e4       	ldi	r24, 0x41	; 65
 5dc:	0e 94 85 01 	call	0x30a	; 0x30a <DIO_write_port>
 5e0:	41 e0       	ldi	r20, 0x01	; 1
 5e2:	61 e0       	ldi	r22, 0x01	; 1
 5e4:	82 e4       	ldi	r24, 0x42	; 66
 5e6:	0e 94 c0 00 	call	0x180	; 0x180 <DIO_write>
 5ea:	0e 94 59 02 	call	0x4b2	; 0x4b2 <send_falling_edge>
 5ee:	8f ec       	ldi	r24, 0xCF	; 207
 5f0:	97 e0       	ldi	r25, 0x07	; 7
 5f2:	01 97       	sbiw	r24, 0x01	; 1
 5f4:	f1 f7       	brne	.-4      	; 0x5f2 <LCD_vSend_char+0x1a>
 5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <LCD_vSend_char+0x20>
 5f8:	00 00       	nop
 5fa:	08 95       	ret

000005fc <LCD_vSend_string>:
 5fc:	cf 93       	push	r28
 5fe:	df 93       	push	r29
 600:	ec 01       	movw	r28, r24
 602:	88 81       	ld	r24, Y
 604:	88 23       	and	r24, r24
 606:	31 f0       	breq	.+12     	; 0x614 <LCD_vSend_string+0x18>
 608:	21 96       	adiw	r28, 0x01	; 1
 60a:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <LCD_vSend_char>
 60e:	89 91       	ld	r24, Y+
 610:	81 11       	cpse	r24, r1
 612:	fb cf       	rjmp	.-10     	; 0x60a <LCD_vSend_string+0xe>
 614:	df 91       	pop	r29
 616:	cf 91       	pop	r28
 618:	08 95       	ret

0000061a <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 61a:	9f ef       	ldi	r25, 0xFF	; 255
 61c:	98 0f       	add	r25, r24
 61e:	92 30       	cpi	r25, 0x02	; 2
 620:	70 f4       	brcc	.+28     	; 0x63e <LCD_movecursor+0x24>
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	96 0f       	add	r25, r22
 626:	90 31       	cpi	r25, 0x10	; 16
 628:	60 f4       	brcc	.+24     	; 0x642 <LCD_movecursor+0x28>
	{
		data=0x80;
	}
	else if(row==1)
 62a:	81 30       	cpi	r24, 0x01	; 1
 62c:	19 f4       	brne	.+6      	; 0x634 <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 62e:	2f e7       	ldi	r18, 0x7F	; 127
 630:	26 0f       	add	r18, r22
 632:	08 c0       	rjmp	.+16     	; 0x644 <LCD_movecursor+0x2a>
	}
	else if (row==2)
 634:	82 30       	cpi	r24, 0x02	; 2
 636:	31 f4       	brne	.+12     	; 0x644 <LCD_movecursor+0x2a>
	{
		data=0xc0+coloumn-1;
 638:	2f eb       	ldi	r18, 0xBF	; 191
 63a:	26 0f       	add	r18, r22
 63c:	03 c0       	rjmp	.+6      	; 0x644 <LCD_movecursor+0x2a>
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 63e:	20 e8       	ldi	r18, 0x80	; 128
 640:	01 c0       	rjmp	.+2      	; 0x644 <LCD_movecursor+0x2a>
 642:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_vSend_cmd(data);
 644:	82 2f       	mov	r24, r18
 646:	0e 94 70 02 	call	0x4e0	; 0x4e0 <LCD_vSend_cmd>
 64a:	8f ec       	ldi	r24, 0xCF	; 207
 64c:	97 e0       	ldi	r25, 0x07	; 7
 64e:	01 97       	sbiw	r24, 0x01	; 1
 650:	f1 f7       	brne	.-4      	; 0x64e <LCD_movecursor+0x34>
 652:	00 c0       	rjmp	.+0      	; 0x654 <LCD_movecursor+0x3a>
 654:	00 00       	nop
 656:	08 95       	ret

00000658 <_exit>:
 658:	f8 94       	cli

0000065a <__stop_program>:
 65a:	ff cf       	rjmp	.-2      	; 0x65a <__stop_program>
